/*
 * Autogenerated file, don't edit!
 */
package main
import(
  "log"
  "net/http"
  "io/ioutil"
  redis "gopkg.in/redis.v3"
)
var client *redis.Client
func main() {
  var err error
  defConf,err=ConfFromYaml(DefConfYaml)
  if err!=nil{log.Fatal("Error reading config file: ",err)}
  appConf,err=ConfFromYamlFile(defConf.Cfg)
  if err!=nil{log.Fatal("Error reading config file: ",err)}
  privateKey,err=ioutil.ReadFile(appConf.Keyfile)
  if err!=nil{log.Fatal("Error reading private key from "+appConf.Keyfile+": ",err)}
  client=redis.NewClient(&redis.Options{Addr:"redis:6379",Password:"",DB: 0,})
  pong,err:=client.Ping().Result()
  if err!=nil{log.Fatal("Error connecting to redis server: ",err)}
  log.Println(pong)
  log.Println(AppName,appConf.Port,AppVersion,"Started")
  http.HandleFunc("/", handleRequest)
  err=http.ListenAndServe(appConf.Port,nil)
  if err!=nil{log.Fatal("Error starting "+AppName+appConf.Port+" "+AppVersion+ ": ",err)}
  log.Println(AppName,appConf.Port,AppVersion,"Stopped")
}
